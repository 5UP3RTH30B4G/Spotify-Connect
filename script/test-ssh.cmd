@echo off
setlocal enabledelayedexpansion

echo.
echo ============================================
echecho.
echo üìÅ Test 4: Permissions sur le r√©pertoire de d√©ploiement...

:: Cr√©er un script temporaire pour les permissions
echo @echo off > temp_permissions_test.cmd
echo ssh -o PreferredAuthentications=password %DEPLOY_USER%@%DEPLOY_HOST% "echo 'Test des permissions pour: %DEPLOY_PATH%' && mkdir -p %DEPLOY_PATH% && echo '‚úÖ Cr√©ation/acc√®s au r√©pertoire r√©ussi' ^|^| echo '‚ùå Impossible de cr√©er le r√©pertoire' && touch %DEPLOY_PATH%/test-write && rm %DEPLOY_PATH%/test-write && echo '‚úÖ Permissions d √©criture OK' ^|^| echo '‚ùå Pas de permissions d √©criture'" >> temp_permissions_test.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_permissions_test.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_permissions_test.cmd
)

if exist "temp_permissions_test.cmd" del temp_permissions_test.cmd TEST CONNEXION SSH
echo ============================================

REM Lecture de la configuration
if not exist "deploy-config.env" (
    echo ‚ùå Fichier deploy-config.env introuvable
    echo    Ex√©cutez d'abord: configure-ssh.cmd
    pause
    exit /b 1
)

echo üìñ Lecture de la configuration...
for /f "usebackq tokens=1,2 delims==" %%A in ("deploy-config.env") do (
    if not "%%A"=="" if not "%%A"=="REM" if not "%%A"=="#" (
        set "%%A=%%B"
        echo    %%A = %%B
    )
)

echo.
echo üéØ Test de connexion vers: %DEPLOY_USER%@%DEPLOY_HOST%

echo.
echo üîê Test 1: Connexion SSH basique...

:: Cr√©er un script temporaire pour le test de connexion
echo @echo off > temp_connection_test.cmd
echo ssh -o PreferredAuthentications=password -o ConnectTimeout=10 %DEPLOY_USER%@%DEPLOY_HOST% "echo 'Connexion SSH r√©ussie!'" >> temp_connection_test.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_connection_test.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_connection_test.cmd
)

if exist "temp_connection_test.cmd" del temp_connection_test.cmd

if %errorlevel% equ 0 (
    echo ‚úÖ Connexion SSH fonctionnelle
) else (
    echo ‚ùå √âchec de la connexion SSH
    echo    V√©rifiez vos identifiants et l'acc√®s au serveur
    pause
    exit /b 1
)

echo.
echo üñ•Ô∏è  Test 2: Informations syst√®me...

:: Cr√©er un script temporaire pour les informations syst√®me
echo @echo off > temp_system_info.cmd
echo ssh -o PreferredAuthentications=password %DEPLOY_USER%@%DEPLOY_HOST% "echo 'Syst√®me: '$(lsb_release -d 2>/dev/null ^| cut -f2 ^|^| cat /etc/os-release ^| grep PRETTY_NAME ^| cut -d'=' -f2 ^| tr -d '\"') && echo 'Kernel: '$(uname -r) && echo 'Architecture: '$(uname -m) && echo 'Espace disque disponible:' && df -h / ^| tail -1" >> temp_system_info.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_system_info.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_system_info.cmd
)

if exist "temp_system_info.cmd" del temp_system_info.cmd

echo.
echo üîß Test 3: Outils requis...

:: Cr√©er un script temporaire pour les outils requis
echo @echo off > temp_tools_test.cmd
echo ssh -o PreferredAuthentications=password %DEPLOY_USER%@%DEPLOY_HOST% "echo 'V√©rification des outils requis:' && if command -v node ^&^> /dev/null; then echo '‚úÖ Node.js: '$(node --version); else echo '‚ùå Node.js non install√©'; fi && if command -v npm ^&^> /dev/null; then echo '‚úÖ npm: '$(npm --version); else echo '‚ùå npm non install√©'; fi && if command -v pm2 ^&^> /dev/null; then echo '‚úÖ PM2: '$(pm2 --version); else echo '‚ö†Ô∏è  PM2 non install√© (sera install√© automatiquement)'; fi && if command -v nginx ^&^> /dev/null; then echo '‚úÖ Nginx: '$(nginx -v 2^>^&1 ^| cut -d'/' -f2) && if systemctl is-active --quiet nginx; then echo '‚úÖ Nginx en cours d execution'; else echo '‚ö†Ô∏è  Nginx arr√™t√©'; fi; else echo '‚ö†Ô∏è  Nginx non install√©'; fi" >> temp_tools_test.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_tools_test.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_tools_test.cmd
)

if exist "temp_tools_test.cmd" del temp_tools_test.cmd

echo.
echo üìÅ Test 4: Permissions sur le r√©pertoire de d√©ploiement...

:: Cr√©er un script temporaire pour les permissions
echo @echo off > temp_permissions_test.cmd
echo ssh -o PreferredAuthentications=password %DEPLOY_USER%@%DEPLOY_HOST% "echo 'Test des permissions pour: %DEPLOY_PATH%' && mkdir -p %DEPLOY_PATH% && echo '‚úÖ Cr√©ation/acc√®s au r√©pertoire r√©ussi' ^|^| echo '‚ùå Impossible de cr√©er le r√©pertoire' && touch %DEPLOY_PATH%/test-write && rm %DEPLOY_PATH%/test-write && echo '‚úÖ Permissions d √©criture OK' ^|^| echo '‚ùå Pas de permissions d √©criture'" >> temp_permissions_test.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_permissions_test.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_permissions_test.cmd
)

if exist "temp_permissions_test.cmd" del temp_permissions_test.cmd

echo.
echo üåê Test 5: Connectivit√© r√©seau...

:: Cr√©er un script temporaire pour la connectivit√© r√©seau
echo @echo off > temp_network_test.cmd
echo ssh -o PreferredAuthentications=password %DEPLOY_USER%@%DEPLOY_HOST% "echo 'Test de connectivit√© r√©seau:' && if curl -s --connect-timeout 5 https://registry.npmjs.org/ ^> /dev/null; then echo '‚úÖ Acc√®s √† npm registry'; else echo '‚ùå Pas d acc√®s √† npm registry'; fi" >> temp_network_test.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_network_test.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_network_test.cmd
)

if exist "temp_network_test.cmd" del temp_network_test.cmd

if curl -s --connect-timeout 5 https://nodejs.org/ > /dev/null; then
    echo '‚úÖ Acc√®s √† nodejs.org'
else
    echo '‚ùå Pas d\'acc√®s √† nodejs.org'
echo.
echo üìä Test 6: √âtat actuel de l'application...

:: Cr√©er un script temporaire pour l'√©tat de l'application
echo @echo off > temp_app_status.cmd
echo ssh -o PreferredAuthentications=password %DEPLOY_USER%@%DEPLOY_HOST% "if [ -d '%DEPLOY_PATH%' ]; then echo 'Application trouv√©e dans %DEPLOY_PATH%:' && ls -la %DEPLOY_PATH%/ 2^>/dev/null ^|^| echo 'R√©pertoire vide ou inaccessible' && if command -v pm2 ^&^> /dev/null; then echo 'Statut PM2:' && pm2 status 2^>/dev/null ^|^| echo 'Aucun processus PM2'; fi; else echo 'Aucune installation existante trouv√©e'; fi" >> temp_app_status.cmd

:: Utiliser le gestionnaire de mots de passe si disponible
if exist "ssh-credentials.dat" (
    echo ‚úÖ Utilisation du mot de passe SSH sauvegard√©...
    call ssh-password-manager.cmd auto-exec temp_app_status.cmd
) else (
    echo ‚ö†Ô∏è Mot de passe SSH non sauvegard√© - saisie manuelle requise
    call temp_app_status.cmd
)

if exist "temp_app_status.cmd" del temp_app_status.cmd

echo.
echo ‚úÖ TESTS TERMIN√âS!
echo.
echo üìã R√©sum√©:
echo    - Si tous les tests sont verts, vous pouvez d√©ployer avec: deploy-ssh.cmd
echo    - Si Node.js manque, installez-le d'abord sur le serveur
echo    - Si Nginx manque, il sera configur√© lors du d√©ploiement
echo.
pause